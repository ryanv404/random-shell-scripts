#!/usr/bin/env expect

set DELAY 0.1
set SLIDER_LEN 5
set PADDING_CHAR "."
set SLIDER_CHARS [list "/" "\\"]
set MSG "Loading..."

trap {scr_cleanup $SLIDER_LEN $MSG; exit 0;} SIGINT

proc scr_init {} {
  exec tput civis >@stdout
  return
}

proc scr_cleanup {len msg} {
  set strlen [string length $msg]
  set maxlen [expr {$len + $strlen + 12}]
  puts -nonewline [format "\r%s\r" [string repeat " " $maxlen]]
  flush stdout
  exec tput cnorm >@stdout
  return
}

proc run_slider {delay len padchar slider_chars msg} {
  set FMT_GRN "\033\[1;32m"
  set FMT_CLR "\033\[0;0m"

  set chars_idx 0
  set slider_listlen [llength $slider_chars]
  set slider_char [lindex $slider_chars $chars_idx]
  set tot_frames [expr {$len * 2}]

  scr_init

  for {set i 0} {$i < 60} {incr i} {
    set frame [expr {$i % $tot_frames}]
    if {$frame == 0 && $i != 0} {
      incr chars_idx
      set chars_idx [expr {$chars_idx % $slider_listlen}]
      set slider_char [lindex $slider_chars $chars_idx]
    } elseif {$frame == $len} {
      incr chars_idx
      set chars_idx [expr {$chars_idx % $slider_listlen}]
      set slider_char [lindex $slider_chars $chars_idx]
    }

    if {$frame < $len} {
      set lhs [string repeat $padchar $frame]
      set rhs [string repeat $padchar [expr {$len - $frame}]]
    } else {
      set lhs [string repeat $padchar [expr {$tot_frames - $frame}]]
      set rhs [string repeat $padchar [expr {$frame - $len}]]
    }

    set fmtstr [format "\[%s${FMT_GRN}%s${FMT_CLR}%s\] %s\r" $lhs $slider_char $rhs $msg]
    puts -nonewline $fmtstr
    flush stdout
    sleep $delay
  }

  scr_cleanup $len $msg
  return
}

run_slider $DELAY $SLIDER_LEN $PADDING_CHAR $SLIDER_CHARS $MSG
